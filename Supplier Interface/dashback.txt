import React, { Component } from 'react';
import reactFeature from '../../assets/images/react-feature.svg';
import sassFeature from '../../assets/images/sass-feature.svg';
import bootstrapFeature from '../../assets/images/bootstrap-feature.svg';
import responsiveFeature from '../../assets/images/responsive-feature.svg';
import { Card, CardBody, Row, Col } from 'reactstrap';
import "@fortawesome/fontawesome-free/css/all.min.css";
import "bootstrap-css-only/css/bootstrap.min.css";
import "mdbreact/dist/css/mdb.css";
import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBIcon } from 'mdbreact';

import { Button, Form, FormGroup, Label, Input, FormText,   } from 'reactstrap';
import { contractAddress,ABI} from './Constants'
const isEthereumAddress = require('is-ethereum-address');




  const Web3=require('web3')
let MyContract 

class Dashboard extends Component {

  constructor(){
    super()
    this.state={
      orgName:'',
      certName:'',
      serialID:'',
      date:'',
      certList:'0x2A4651384C70c532d58B2c534A2567c06A21CAd9',
      pubKey:'',
      isKey:false,
      dropCertArr:[],
    }

    // this.supplierCerts_A()

  }

  componentWillMount(){
    this.supplierCerts_A()
  }
 componentDidMount(){
  }

  

 async supplierCerts_A(){

    var web3;
    let ethereum = window.ethereum;
    console.log('ethereum',window.ethereum)

    web3 = new Web3(window.web3.currentProvider);

    const account = await ethereum.enable();
    const MyContract = new web3.eth.Contract(ABI,contractAddress);
    const {orgName,certName,date,pubKey,certList,isKey,serialID}=this.state

     console.log(MyContract.methods)
     const accounts = await web3.eth.getAccounts();
         
try{

  MyContract.methods.getSupplierACert().call({from:accounts[0]})
  .then((result) => {
    // console.log(result)
    var tempArr=[]
    result.map((val,inx)=>{
       MyContract.methods.govtToSupplierAHistory(val).call({from:accounts[0]})
       .then((res)=>{
        //  console.log(res)
         if(res.used==false){

          //  tempArr.push(res)
          this.state.dropCertArr.push(res)
          }
       })
    })
// console.log(tempArr)
    this.setState({dropCertArr:this.state.dropCertArr})
    console.log('drop',this.state.dropCertArr)
  })
}
catch(e){
  console.log(e.message)
}
         


    


  }

  validateKey(e){
    this.setState({
      pubKey:e
    })

    var keys=[
      '0x2A4651384C70c532d58B2c534A2567c06A21CAd9',
   '0x7495DaFE58922E07889b013CBd36974422e9c570',
  '0x807355F485B193A502523EC4147468D63B4A9C87',
  
    ]
  
    if (isEthereumAddress(e) || e==keys[0] || e==keys[1] || e==keys[2]  ) {
      console.log('This is a valid Ethereum address, prefixed with a 0x');
      this.setState({isKey:true})
    }
    else{
      console.log('glt hai ')
      
    }
  
  
  
  }


 

 async  createCertFun(e){
  
    const {orgName,certName,date,pubKey,certList,isKey,serialID}=this.state
    console.log(orgName,certName,date,pubKey,certList,isKey,serialID)
    // this.supplierCerts_A()

  if(orgName!=='' && orgName!==undefined && 
      certName!=='' && certName!==undefined && date!==''
      && date!==undefined  && pubKey!==''
      && pubKey!==undefined  && isKey==true &&
      certList!=='' && certList!==undefined
      &&  serialID!=='' && serialID!==undefined )
      {
  
        var web3;
        let ethereum = window.ethereum;
        console.log('ethereum',window.ethereum)

        web3 = new Web3(window.web3.currentProvider);

        const account = await ethereum.enable();
        const MyContract = new web3.eth.Contract(ABI,contractAddress);
      
        // let that = this;
        // const accounts = await web3.eth.getAccounts();
        // // console.log('account ----->',accounts)
        // // console.log('MyContract---->',MyContract)

        // // console.log('MyContract.methods------->',MyContract.methods)


        try{

            
          
          let that = this
          const accounts = await web3.eth.getAccounts();
          await MyContract.methods.
          createCertificateForManufacturer(pubKey,orgName,certName,serialID,date,web3.utils.toAscii(certList)).send({
                  from: accounts[0]
              }).on('transactionHash',(hash) =>{
                  console.log(hash)
                  that.setState({transactionHash : 'https://rinkeby.etherscan.io/tx/'+hash})
              }).on('confirmation', function(){
                  console.log("Transaction confirmed");
                  
              });
}
        catch (e){
console.log('error----->',e.message)

        }
      }
      else{
        alert('Please fill all fields properly')
      }

  }




render() {
    const heroStyles = {
      padding: '50px 0 70px'
    };

    var dropArr=this.state.dropCertArr


    {
      console.log('RENDER--->',dropArr)

    }


    return (
      <MDBContainer style={{height:'100px',marginLeft:'300px'}}>
       <MDBRow>
         <MDBCol md='5' >
          <MDBCard>
            <MDBCardBody>
             <form onSubmit={(e)=>{e.preventDefault()}}>
             {(this.state.dropCertArr)?(
             <div>
             <label
                  htmlFor="defaultFormCardNameEx"
                  className="grey-text font-weight-light"
                >
                  Name of Organization
                </label>
                <input
                  type="text"
                  id="defaultFormCardNameEx"
                  className="form-control"
                  value={this.state.orgName}
                  onChange={(e)=>{this.setState({orgName:e.target.value})}}
                />
                <br />
                
                <label
                  htmlFor="defaultFormCardNameEx"
                  className="grey-text font-weight-light"
                >
                  Name of Certificate
                </label>
                <input
                  type="text"
                  id="defaultFormCardNameEx"
                  className="form-control"
                  value={this.state.certName}
                  onChange={(e)=>{this.setState({certName:e.target.value})}}
                />
                <br />


                <label
                  htmlFor="defaultFormCardEmailEx"
                  className="grey-text font-weight-light"
                  >
                  Serial ID
                </label>
                <input
                  type="text"
                  id="defaultFormCardEmailEx"
                  className="form-control"
                  value={this.state.serialID}
                  onChange={(e)=>{this.setState({serialID:e.target.value})}}
                />

                <br />


                <label
                  htmlFor="defaultFormCardEmailEx"
                  classNa9me="grey-text font-weight-light"
                  >
                  Date
                </label>
                <input
                  type="date"
                  id="defaultFormCardEmailEx"
                  className="form-control"
                  value={this.state.date}
                  onChange={(e)=>{this.setState({date:e.target.value})}}
                
                />
                <br />

        <FormGroup>
          <Label for="exampleSelect">Certificate owned by Supplier</Label>
          <Input type="select" 
          onChange={(e)=>{this.setState({certList:e.target.value})}}
                    name="select" id="exampleSelect"   >
         
    {/* {console.log(this.state.dropCertArr)} */}
            {
              dropArr.map((val,inx)=>{
                console.log('HAsh',val)
                return(
                 <option value={val.hash} >{val.hash}</option>

                )
              }
              )

            }
           

          </Input>
         </FormGroup>
      


        <br />
                <label
                  htmlFor="defaultFormCardEmailEx"
                  className="grey-text font-weight-light"
                  >
                  Public key 
                </label>
                <input
                  type="text"
                  id="defaultFormCardEmailEx"
                  className="form-control"
                  placeholder='Enter public key '
                  value={this.state.pubKey}
                  onChange={(e)=>this.validateKey(e.target.value)}
 
                />

                <div className="text-center py-4 mt-3">
                  <MDBBtn className="btn btn-outline-blue" type="submit" onClick={(e)=>this.createCertFun(e)}>
                    Create
                    <MDBIcon far icon="paper-plane" className="ml-2" />
                  </MDBBtn>
                </div>
                </div>
                ):(null)}
             
              </form>
            </MDBCardBody>
          </MDBCard>
        </MDBCol>
      </MDBRow>
    </MDBContainer>
    );
  }
}

export default Dashboard;


/////////////////////////////////////////////////////////////////////////


 {/* <option value='0x2A4651384C70c532d58B2c534A2567c06A21CAd9'>0x2A4651384C70c532d58B2c534A2567c06A21CAd9</option>
            {/* <option value='0x7495DaFE58922E07889b013CBd36974422e9c570'>0x7495DaFE58922E07889b013CBd36974422e9c570</option>
            <option value='0x807355F485B193A502523EC4147468D63B4A9C87'>0x807355F485B193A502523EC4147468D63B4A9C87</option>
             */} 



// import React from "react";
// import "@fortawesome/fontawesome-free/css/all.min.css";
// import "bootstrap-css-only/css/bootstrap.min.css";
// import "mdbreact/dist/css/mdb.css";
// import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBIcon } from 'mdbreact';

// const FormPage = () => {
//   return (
//     <main id="primary-content" tabIndex="-1" certList="main">

//     <MDBContainer style={{height:'100px',marginTop:'50px',marginLeft:'300px'}}>
//       <MDBRow>
//         <MDBCol md='5' >
//           <MDBCard>
//             <MDBCardBody>
//               <form>
//                 <label
//                   htmlFor="defaultFormCardNameEx"
//                   className="grey-text font-weight-light"
//                 >
//                   Name of Organization
//                 </label>
//                 <input
//                   type="text"
//                   id="defaultFormCardNameEx"
//                   className="form-control"
//                 />
//                 <br />
                
//                 <label
//                   htmlFor="defaultFormCardNameEx"
//                   className="grey-text font-weight-light"
//                 >
//                   Name of Certificate
//                 </label>
//                 <input
//                   type="text"
//                   id="defaultFormCardNameEx"
//                   className="form-control"
//                 />
//                 <br />


//                 <label
//                   htmlFor="defaultFormCardEmailEx"
//                   className="grey-text font-weight-light"
//                   >
//                   Date
//                 </label>
//                 <input
//                   type="date"
//                   id="defaultFormCardEmailEx"
//                   className="form-control"
//                 />
//                 <div className="text-center py-4 mt-3">
//                   <MDBBtn className="btn btn-outline-blue" type="submit">
//                     Create Certificate
//                     <MDBIcon far icon="paper-plane" className="ml-2" />
//                   </MDBBtn>
//                 </div>
//               </form>
//             </MDBCardBody>
//           </MDBCard>
//         </MDBCol>
//       </MDBRow>
//     </MDBContainer>
//     </main>       
//   );
// };

// export default FormPage;











// <Row>
//           <Col md={6}>
//             <div className="home-hero" style={heroStyles}>
//               <h1>Welcome to Vibe.</h1>
//               <p className="text-muted">
//                 Discover this UI dashboard framework that will help speed up
//                 your next web application project.
//               </p>
//             </div>
//           </Col>
//         </Row>
//         <Row>
//           <Col md={6}>
//             <Card>
//               <CardBody className="display-flex">
//                 <img
//                   src={reactFeature}
//                   style={{ width: 70, height: 70 }}
//                   alt="react.js"
//                   aria-hidden={true}
//                 />
//                 <div className="m-l">
//                   <h2 className="h4">React.js</h2>
//                   <p className="text-muted">
//                     Built to quickly get your MVPs off the ground.
//                   </p>
//                 </div>
//               </CardBody>
//             </Card>
//           </Col>
//           <Col md={6}>
//             <Card>
//               <CardBody className="display-flex">
//                 <img
//                   src={bootstrapFeature}
//                   style={{ width: 70, height: 70 }}
//                   alt="Bootstrap"
//                   aria-hidden={true}
//                 />
//                 <div className="m-l">
//                   <h2 className="h4">Bootstrap 4</h2>
//                   <p className="text-muted">
//                     The most popular framework to get your layouts built.
//                   </p>
//                 </div>
//               </CardBody>
//             </Card>
//           </Col>
//         </Row>
//         <Row>
//           <Col md={6}>
//             <Card>
//               <CardBody className="display-flex">
//                 <img
//                   src={sassFeature}
//                   style={{ width: 70, height: 70 }}
//                   alt="Sass"
//                   aria-hidden={true}
//                 />
//                 <div className="m-l">
//                   <h2 className="h4">Sass</h2>
//                   <p className="text-muted">
//                     Easily change the design system styles to fit your needs.
//                   </p>
//                 </div>
//               </CardBody>
//             </Card>
//           </Col>
//           <Col md={6}>
//             <Card>
//               <CardBody className="display-flex">
//                 <img
//                   src={responsiveFeature}
//                   style={{ width: 70, height: 70 }}
//                   alt="Responsive"
//                   aria-hidden={true}
//                 />
//                 <div className="m-l">
//                   <h2 className="h4">Responsive</h2>
//                   <p className="text-muted">
//                     Designed for screens of all sizes.
//                   </p>
//                 </div>
//               </CardBody>
//             </Card>
//           </Col>
//         </Row>
